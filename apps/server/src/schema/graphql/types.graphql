# src/schema/graphql/types.graphql

"""
Represents the price of an agreement, including currency information.
"""
type Price {
  """
  The amount of money for the agreement.
  """
  amount: Float!
  """
  The currency of the amount (e.g., USD, EUR).
  """
  currency: String!
}

"""
Type for geographical coordinates and radius in the response.
"""
type Coordinates {
  """
  Latitude of the location.
  """
  latitude: Float!

  """
  Longitude of the location.
  """
  longitude: Float!

  """
  Radius of the search area in kilometers.
  """
  radius: Int
}

"""
ResponseTime represents the time it took to process and respond to the availability request.
It can be split into different segments for clarity.
"""
type ResponseTime {
  """
  The total time taken for the availability response in milliseconds.
  """
  total: Float!

  """
  Time taken by the provider service to return the data
  """
  provider: Float!
}

"""
Type for sorting options in the response.
"""
type SortDetails {
  """
  The field that was used to sort the results (e.g., price, name).
  """
  field: SortField!

  """
  The order of sorting (e.g., ascending, descending).
  """
  order: SortOrder
}

"""
Enumeration for sortable fields.
"""
enum SortField {
  """
  Sort by price.
  """
  PRICE

  """
  Sort by name.
  """
  NAME
}

"""
Enumeration for sorting order.
"""
enum SortOrder {
  """
  Ascending order.
  """
  ASC

  """
  Descending order.
  """
  DESC
}

"""
PageInfo represents the pagination information for a given connection.
"""
type PageInfo {
  """
  Whether there are more items after the current set of results.
  """
  hasNextPage: Boolean!

  """
  Whether there are more items before the current set of results.
  """
  hasPreviousPage: Boolean!

  """
  The cursor to be used for fetching the next set of results.
  """
  endCursor: String

  """
  The cursor to be used for fetching the previous set of results.
  """
  startCursor: String
}
